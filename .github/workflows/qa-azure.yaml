name: QA on Azure
# QA checks on Azure, allowing the use of a real WSL back-en

concurrency: azure-vm

on:
  pull_request:
  workflow_dispatch:
  push:
    branches: [main]

env:
  az_name: wsl-ci-2
  az_resource_group: wsl

jobs:
  vm-setup:
    name: Set up Azure VM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Start Azure VM
        uses: ubuntu/WSL/.github/actions/vm-setup/@main
        with:
          az_name: ${{ env.az_name }}
          az_resource_group: ${{ env.az_resource_group }}
          az_creds: ${{ secrets.AZURE_VM_CREDS }}
          az_vm_hostname: ${{ secrets.AZURE_VM_AUTHORITY }}
          az_vm_username: ${{ secrets.AZURE_VM_UN }}
          az_vm_password: ${{ secrets.AZURE_VM_UP }}

  qa:
    name: Run QA checks on the Azure VM
    runs-on: self-hosted
    # This step has an implicit dependency on vm-setup, because the runner
    # won't be started until then. Don't make the dependency explicit: it
    # needs to run concurrently with vm-setup.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"
      - name: Prepare repo
        shell: powershell
        run: |
          # Preparing repo
          .\prepare-repository.ps1 --AcceptAll
      - name: Test
        shell: powershell
        run: |
          go test -shuffle=on
          if ( ! $? ) { Exit(1) }

  stop-vm:
    name: Clean up the Azure VM
    runs-on: ubuntu-latest
    needs: qa
    if: always()
    # This step has an implicit dependency on vm-setup, because the runner
    # won't be started until then. Don't make the dependency explicit: it
    # needs to run concurrently with vm-setup.
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Stop Azure VM
        uses: ubuntu/WSL/.github/actions/vm-stop/@main
        with:
          az_name: ${{ env.az_name }}
          az_resource_group: ${{ env.az_resource_group }}
          az_creds: ${{ secrets.AZURE_VM_CREDS }}
