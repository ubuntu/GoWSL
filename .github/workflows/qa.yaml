name: QA

concurrency: azure-vm

on:
  pull_request:
  workflow_dispatch:
  push:
    branches: [main]

env:
  az_name: wsl-ci-2
  az_resource_group: wsl

jobs:
  quality:
    name: "Quality checks"
    # This job ensures the project compiles and the linter passes before commiting
    # to the whole Github-Azure-WSL orchestra.
    strategy:
      matrix:
        os: [ubuntu, windows]
    runs-on: ${{ matrix.os }}-latest
    steps:
    - name: Set up Git
      shell: bash
      run : |
        git config --global core.autocrlf false
        git config --global core.eol lf
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version-file: go.mod
    - name: Build
      shell: bash
      run: |
        go build ./...
    - name: Lint with mock back-end
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.52.0
        args:  --build-tags="gowslmock"
    - name: Lint with real back-end
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.52.0
    - name: Test with mocks
      shell: bash
      run: |
        # Prepare repo with mock rootfs and run mock tests

        echo "::group::Setup"
        mkdir -p images
        touch images/empty.tar.gz
        touch images/rootfs.tar.gz
        echo "::endgroup::"

        go test -tags="gowslmock" -shuffle=on
    - name: Test with mocks, race flag enabled
      # We skip it on Windows because -race depends on Cgo, which is
      # complicated to enable (it requires Cygwin, MSVC support is
      # broken)
      if: ${{ matrix.os }} == "ubuntu"
      shell: bash
      run: go test -tags="gowslmock" -shuffle=on

  vm-setup:
    name: "Set up Azure VM"
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Start Azure VM
        uses: ubuntu/WSL/.github/actions/vm-setup/@main
        with:
          az_name: ${{ env.az_name }}
          az_resource_group: ${{ env.az_resource_group }}
          az_creds: ${{ secrets.AZURE_VM_CREDS }}
          az_vm_hostname: ${{ secrets.AZURE_VM_AUTHORITY }}
          az_vm_username: ${{ secrets.AZURE_VM_UN }}
          az_vm_password: ${{ secrets.AZURE_VM_UP }}

  run-tests:
    name: "Run tests on Azure VM"
    runs-on: self-hosted
    needs: quality
    # This step has an implicit dependency on vm-setup, because the runner
    # won't be started until then. Don't make the dependency explicit: it
    # needs to run concurrently with vm-setup.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"
      - name: Prepare repo
        shell: powershell
        run: |
          # Preparing repo
          .\prepare-repository.ps1 --AcceptAll
      - name: Test
        shell: powershell
        run: |
          go test -shuffle=on
          if ( ! $? ) { Exit(1) }

  stop-vm:
    name: "Clean up Azure VM"
    runs-on: ubuntu-latest
    needs: run-tests
    if: always()
    # This step has an implicit dependency on vm-setup, because the runner
    # won't be started until then. Don't make the dependency explicit: it
    # needs to run concurrently with vm-setup.
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Stop Azure VM
        uses: ubuntu/WSL/.github/actions/vm-stop/@main
        with:
          az_name: ${{ env.az_name }}
          az_resource_group: ${{ env.az_resource_group }}
          az_creds: ${{ secrets.AZURE_VM_CREDS }}
