name: QA on Azure
# QA checks on Azure, allowing the use of a real WSL back-en

concurrency: azure-vm

on:
  pull_request:
  workflow_dispatch:
  push:
    branches: [main]

env:
  az_name: wsl-ci-2
  az_resource_group: wsl

jobs:
  vm-setup:
    name: Set up Azure VM
    runs-on: ubuntu-latest
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_VM_CREDS }}
      - name: Start the Runner
        shell: bash
        run: |
          az vm start --name ${{ env.az_name }} --resource-group ${{ env.az_resource_group }}

  qa:
    name: Run QA checks on the Azure VM
    runs-on: self-hosted
    needs: vm-setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up WSL
        uses: Ubuntu/WSL/.github/actions/wsl-install@main
      - name: Set up Go
        shell: powershell
        run: |
          winget install GoLang.Go --accept-source-agreements --accept-package-agreements --silent --verbose
          # Cannot check for error: there is no way to distinguish the two:
          # - Legitimate error
          # - Error because no updates found (Golang.Go is already up to date)
          #
          # We can check that Go works, though.
          go version
      - name: Prepare repo
        shell: powershell
        run: |
          # Preparing repo
          .\prepare-repository.ps1 --AcceptAll
      - name: Test
        shell: powershell
        run: |
          go test -shuffle=on -timeout 20m
          if ( ! $? ) { Exit(1) }

  stop-vm:
    name: Clean up the Azure VM
    runs-on: ubuntu-latest
    needs: [vm-setup, qa]
    if: always()
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_VM_CREDS }}
      - name: Deallocate the Runner
        shell: bash
        run: |
          az vm deallocate --name ${{ env.az_name }} --resource-group ${{ env.az_resource_group }}
