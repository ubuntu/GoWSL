name: Test

concurrency: azure-vm

on:
  pull_request:
  workflow_dispatch:
  push:
    branches: [main]

env:
  az_name: wsl-ci-2
  az_resource_group: wsl

jobs:
  basic-verification:
    # This job ensures the project compiles and the linter passes before commiting
    # to the whole Github-Azure-WSL orchestra.
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Build
        shell: powershell
        run: go build -v ./...
      - name: Linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --config=.golangci-ci.yaml

  vm-setup:
    runs-on: ubuntu-latest
    needs: basic-verification
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Start Azure VM
        uses: ubuntu/WSL/.github/actions/vm-setup/@main
        with:
          az_name: ${{ env.az_name }}
          az_resource_group: ${{ env.az_resource_group }}
          az_creds: ${{ secrets.AZURE_VM_CREDS }}
          az_vm_hostname: ${{ secrets.AZURE_VM_AUTHORITY }}
          az_vm_username: ${{ secrets.AZURE_VM_UN }}
          az_vm_password: ${{ secrets.AZURE_VM_UP }}

  run-tests:
    runs-on: self-hosted
    needs: basic-verification
    # This step has an implicit dependency on vm-setup, because the runner
    # won't be started until then. Don't make the dependency explicit: it
    # needs to run concurrently with vm-setup.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.18"
      - name: Download rootfs
        shell: powershell
        run: |
          # Syncing rootfs cache
          $rootfs = "${HOME}\Downloads\rootfs\jammy.tar.gz"
          .\.github\workflows\syncRootfs.ps1 -Path "${rootfs}" -CodeName "jammy" ; if(! "$?" ) { Exit(1) }

          # Copying rootfs from cache
          if ( $(Test-Path -Path ".\images") ) {
              Remove-Item ".\images" -Force -Recurse
          }

          New-Item -ItemType "directory" -Path ".\images" -Force          | Out-Null ; if(! "$?" ) { Exit(2) }
          New-Item -ItemType "File" -Path ".\images\empty.tar.gz" -Force  | Out-Null ; if(! "$?" ) { Exit(3) }
          Copy-Item -Path "${rootfs}" -Destination ".\images\"            | Out-Null ; if(! "$?" ) { Exit(4) }
      - name: Install WSL
        uses: ubuntu/WSL/.github/actions/wsl-install/@main
      - name: Test
        uses: ubuntu/WSL/.github/actions/wsl-powershell/@main
        with:
          exec: |
            go test
            if ( ! $? ) { Exit(1) }

  stop-vm:
    runs-on: ubuntu-latest
    needs: [basic-verification, run-tests]
    if: always()
    # This step has an implicit dependency on vm-setup, because the runner
    # won't be started until then. Don't make the dependency explicit: it
    # needs to run concurrently with vm-setup.
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Stop Azure VM
        uses: ubuntu/WSL/.github/actions/vm-stop/@main
        with:
          az_name: ${{ env.az_name }}
          az_resource_group: ${{ env.az_resource_group }}
          az_creds: ${{ secrets.AZURE_VM_CREDS }}
