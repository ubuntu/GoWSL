# This is for the CI. To run it, please use:
#     golangci-lint run
# Locally, you can use
#     golangci-lint run --fix
#
# Use argument --build-tags="gowslmock" to lint the mock files.

linters:
  # linters to run in addition to default ones
  enable:
    - dupl
    - durationcheck
    - errname
    - errorlint
    - exportloopref
    - forbidigo
    - forcetypeassert
    - gci
    - godot
    - gofmt
    - gosec
    - misspell
    - nolintlint
    - revive
    - thelper
    # - tparallel # Tests are non-parallel by default because they depend on the global state of WSL and the registry
    - unconvert
    - unparam
    - whitespace
    ##- wrapcheck # To think properly about it

run:
  timeout: 5m

# Get all linter issues, even if duplicated
issues:
  exclude-use-default: false
  max-issues-per-linter: 0
  max-same-issues: 0
  exclude:
    # EXC0001 errcheck: most errors are in defer calls, which are safe to ignore and idiomatic Go (would be good to only ignore defer ones though)
    - 'Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print(f|ln)?|os\.(Un)?Setenv|w\.Stop). is not checked'
    # EXC0008 gosec: duplicated of errcheck
    - (G104|G307)
    # EXC0010 gosec: False positive is triggered by 'src, err := ioutil.ReadFile(filename)'
    - Potential file inclusion via variable
    # Use of unsafe is unavoidable in this package
    - G103
    # We don't wrap errors on purpose
    - non-wrapping format verb for fmt.Errorf. Use `%w` to format errors
    # revive: unexported-return for functions exported only in tests, aliasing doesn't work here as the linter always goes for the underlying model which is unexported
    - 'unexported-return: exported func InitialModel(ForTests|WithPrevConfig)? returns unexported type watchdtui.model, which can be annoying to use'
    # We want named parameters even if unused, as they help better document the function
    - unused-parameter
    # Sometimes it is more readable it do a `if err:=a(); err != nil` tha simpy `return a()`
    - if-return

nolintlint:
  require-explanation: true
  require-specific: true

linters-settings:
   # Forbid the usage of deprecated ioutil and debug prints
  forbidigo:
    forbid:
      - ioutil\.
      - ^print.*$
  staticcheck:
    # Should be better for it to be autodetected
    # https://github.com/golangci/golangci-lint/issues/2234
    go: "1.22.1"
